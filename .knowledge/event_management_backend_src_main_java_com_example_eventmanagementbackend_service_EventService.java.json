{"is_source_file": true, "format": "Java", "description": "This file defines the EventService class, which encapsulates the business logic for managing Event entities in an event management backend application. It provides methods for creating, updating, deleting, and retrieving events, as well as validating event times and applying request data to Event objects.", "external_files": ["com/example/eventmanagementbackend/repository/EventRepository.java", "com/example/eventmanagementbackend/model/Event.java", "com/example/eventmanagementbackend/model/EventCategory.java", "com/example/eventmanagementbackend/dto/EventRequest.java", "com/example/eventmanagementbackend/exception/EventNotFoundException.java", "com/example/eventmanagementbackend/exception/InvalidEventTimeException.java"], "external_methods": ["repository.save()", "repository.findById()", "repository.existsById()", "repository.deleteById()", "repository.findAll()", "repository.findByCategory()", "EventRequest.getStartTime()", "EventRequest.getEndTime()", "EventRequest.getName()", "EventRequest.getDescription()", "EventRequest.getLocation()", "EventRequest.getCategory()", "Event.setName()", "Event.setDescription()", "Event.setStartTime()", "Event.setEndTime()", "Event.setLocation()", "Event.setCategory()"], "published": ["EventService", "create", "update", "delete", "getById", "listAll", "listByCategory"], "classes": [{"name": "EventService", "description": "Service layer handling business logic for Event operations in an event management backend application."}], "methods": [{"name": "create", "description": "Creates a new Event based on the provided EventRequest, after validating times."}, {"name": "update", "description": "Updates an existing Event identified by id with data from EventRequest, with time validation."}, {"name": "delete", "description": "Deletes an Event identified by its id."}, {"name": "getById", "description": "Retrieves an Event by its id."}, {"name": "listAll", "description": "Retrieves a list of all events."}, {"name": "listByCategory", "description": "Retrieves events filtered by category, or all if category is null."}, {"name": "validateTimes", "description": "Validates that the event's end time is after the start time."}, {"name": "apply", "description": "Applies data from EventRequest to an Event entity, setting name, description, times, location, and category."}], "calls": ["repository.save()", "repository.findById()", "repository.existsById()", "repository.deleteById()", "repository.findAll()", "repository.findByCategory()", "validateTimes()", "apply()"], "search-terms": ["EventService", "business logic", "Event management", "create event", "update event", "delete event", "retrieve event", "list events", "validate event times", "apply request"], "state": 2, "file_id": 14, "knowledge_revision": 46, "git_revision": "b0b57b951b87e682466ae75c078e4ec55d72a493", "revision_history": [{"31": ""}, {"46": "b0b57b951b87e682466ae75c078e4ec55d72a493"}], "hash": "4a3ae76d34a6cc656862a2e1688a4648", "format-version": 4, "code-base-name": "event_management_backend", "filename": "event_management_backend/src/main/java/com/example/eventmanagementbackend/service/EventService.java"}