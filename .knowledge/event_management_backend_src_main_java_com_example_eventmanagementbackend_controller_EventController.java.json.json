{"is_source_file": true, "format": "Java", "description": "This Java source file defines a REST controller class 'EventController' for managing event-related operations in a backend application. It includes endpoints for creating, updating, retrieving, listing, and deleting events, along with Swagger/OpenAPI annotations for documentation and security role checks.", "external_files": ["com/example/eventmanagementbackend/dto/EventRequest.java", "com/example/eventmanagementbackend/model/Event.java", "com/example/eventmanagementbackend/model/EventCategory.java", "com/example/eventmanagementbackend/service/AuthUtil.java", "com/example/eventmanagementbackend/service/EventService.java"], "external_methods": ["AuthUtil.requireOrganizerOrAdmin(String role)", "service.create(EventRequest request)", "service.update(Long id, EventRequest request)", "service.getById(Long id)", "service.listByCategory(EventCategory category)", "service.delete(Long id)"], "published": ["com.example.eventmanagementbackend.controller.EventController"], "classes": [{"name": "EventController", "description": "REST controller for managing events, exposing CRUD endpoints for event objects with role-based access control."}], "methods": [{"name": "createEvent", "description": "Creates a new event, requires role validation for ADMIN or ORGANIZER, and invokes the service layer."}, {"name": "updateEvent", "description": "Updates an existing event by ID, role validation, and delegates to the service layer."}, {"name": "getEvent", "description": "Retrieves an event by its ID, accessible by all roles."}, {"name": "listEvents", "description": "Lists all events, optionally filtered by category."}, {"name": "deleteEvent", "description": "Deletes an event by its ID, role validation, and calls the service layer."}], "calls": ["AuthUtil.requireOrganizerOrAdmin(role)", "service.create(request)", "service.update(id, request)", "service.getById(id)", "service.listByCategory(category)", "service.delete(id)"], "search-terms": ["EventController", "CRUD events", "REST endpoints", "Spring Boot", "Swagger documentation", "Role-based authorization", "Java Spring MVC"], "state": 2, "file_id": 15, "knowledge_revision": 47, "git_revision": "b0b57b951b87e682466ae75c078e4ec55d72a493", "revision_history": [{"34": ""}, {"47": "b0b57b951b87e682466ae75c078e4ec55d72a493"}], "hash": "01d9c57b74b9eb2af8e10c90788ad97d", "format-version": 4, "code-base-name": "event_management_backend", "filename": "event_management_backend/src/main/java/com/example/eventmanagementbackend/controller/EventController.java"}